{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport statusCode from '../utils/StatusCode';\nconst initialState = {\n  data: [],\n  status: statusCode.IDLE\n};\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    // fetchProducts(state, action){\n    //     state.data = action.payload;\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.status = statusCode.LOADING;\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = statusCode.IDLE;\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.status = statusCode.ERROR;\n    });\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  fetchProducts\n} = productSlice.actions;\nexport const getProducts = createAsyncThunk('product/get', async () => {\n  const data = await fetch(\"https://fakestoreapi.com/products\");\n  const result = await data.json();\n  return result;\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","statusCode","initialState","data","status","IDLE","productSlice","name","reducers","extraReducers","builder","addCase","getProducts","pending","state","action","LOADING","fulfilled","payload","rejected","ERROR","reducer","fetchProducts","actions","fetch","result","json"],"sources":["/Users/abhishekubhadia/Desktop/Front-end-materials/React/shoppingcart/src/store/productSlice.js"],"sourcesContent":["import {createSlice ,createAsyncThunk} from '@reduxjs/toolkit';\nimport statusCode from '../utils/StatusCode';\nconst initialState ={\n    data:[],\n    status:statusCode.IDLE\n}\n\nconst productSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers:{\n        // fetchProducts(state, action){\n        //     state.data = action.payload;\n         },\n        extraReducers:(builder)=>{\n                builder\n                .addCase(getProducts.pending, (state,action)=>{\n                    state.status = statusCode.LOADING;\n                })\n                .addCase(getProducts.fulfilled,(state,action)=>{\n                    state.data = action.payload;\n                    state.status =statusCode.IDLE;\n                })\n                .addCase(getProducts.rejected, (state,action)=>{\n                    state.status =statusCode.ERROR;\n                })\n        }\n        \n})\nexport default productSlice.reducer;\nexport const {fetchProducts} = productSlice.actions;\n\nexport const getProducts = createAsyncThunk('product/get',async()=>{\n    const data = await fetch(\"https://fakestoreapi.com/products\")\n        const result = await data.json();\n        return result;\n})\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,MAAMC,YAAY,GAAE;EAChBC,IAAI,EAAC,EAAE;EACPC,MAAM,EAACH,UAAU,CAACI;AACtB,CAAC;AAED,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAC;IACL;IACA;EAAA,CACE;EACFC,aAAa,EAAEC,OAAO,IAAG;IACjBA,OAAO,CACNC,OAAO,CAACC,WAAW,CAACC,OAAO,EAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MAC1CD,KAAK,CAACV,MAAM,GAAGH,UAAU,CAACe,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACC,WAAW,CAACK,SAAS,EAAC,CAACH,KAAK,EAACC,MAAM,KAAG;MAC3CD,KAAK,CAACX,IAAI,GAAGY,MAAM,CAACG,OAAO;MAC3BJ,KAAK,CAACV,MAAM,GAAEH,UAAU,CAACI,IAAI;IACjC,CAAC,CAAC,CACDM,OAAO,CAACC,WAAW,CAACO,QAAQ,EAAE,CAACL,KAAK,EAACC,MAAM,KAAG;MAC3CD,KAAK,CAACV,MAAM,GAAEH,UAAU,CAACmB,KAAK;IAClC,CAAC,CAAC;EACV;AAER,CAAC,CAAC;AACF,eAAed,YAAY,CAACe,OAAO;AACnC,OAAO,MAAM;EAACC;AAAa,CAAC,GAAGhB,YAAY,CAACiB,OAAO;AAEnD,OAAO,MAAMX,WAAW,GAAGZ,gBAAgB,CAAC,aAAa,EAAC,YAAS;EAC/D,MAAMG,IAAI,GAAG,MAAMqB,KAAK,CAAC,mCAAmC,CAAC;EACzD,MAAMC,MAAM,GAAG,MAAMtB,IAAI,CAACuB,IAAI,CAAC,CAAC;EAChC,OAAOD,MAAM;AACrB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}