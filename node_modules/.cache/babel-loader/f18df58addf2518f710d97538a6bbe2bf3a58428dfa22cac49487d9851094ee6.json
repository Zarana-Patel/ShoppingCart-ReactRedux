{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport statusCode from \"../utils/StatusCode\";\nconst initialState = {\n  data: [],\n  status: statusCode.IDLE\n};\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    // fetchProducts(state, action){\n    //     state.data = action.payload;\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.status = statusCode.LOADING;\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = statusCode.IDLE;\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.status = statusCode.ERROR;\n    });\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  fetchProducts\n} = productSlice.actions;\nexport const getProducts = createAsyncThunk(\"product/get\", async () => {\n  const data = await fetch(\"https://fakestoreapi.com/products\");\n  const result = await data.json();\n  return result;\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","statusCode","initialState","data","status","IDLE","productSlice","name","reducers","extraReducers","builder","addCase","getProducts","pending","state","action","LOADING","fulfilled","payload","rejected","ERROR","reducer","fetchProducts","actions","fetch","result","json"],"sources":["/Users/abhishekubhadia/Desktop/Front-end-materials/github_deploy/ShoppingCart-ReactRedux/src/store/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport statusCode from \"../utils/StatusCode\"\nconst initialState = {\n  data: [],\n  status: statusCode.IDLE,\n}\n\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    // fetchProducts(state, action){\n    //     state.data = action.payload;\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getProducts.pending, (state, action) => {\n        state.status = statusCode.LOADING\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.data = action.payload\n        state.status = statusCode.IDLE\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.status = statusCode.ERROR\n      })\n  },\n})\nexport default productSlice.reducer\nexport const { fetchProducts } = productSlice.actions\n\nexport const getProducts = createAsyncThunk(\"product/get\", async () => {\n  const data = await fetch(\"https://fakestoreapi.com/products\")\n  const result = await data.json()\n  return result\n})\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAEH,UAAU,CAACI;AACrB,CAAC;AAED,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,UAAU;EAChBL,YAAY;EACZM,QAAQ,EAAE;IACR;IACA;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,WAAW,CAACC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACV,MAAM,GAAGH,UAAU,CAACe,OAAO;IACnC,CAAC,CAAC,CACDL,OAAO,CAACC,WAAW,CAACK,SAAS,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACX,IAAI,GAAGY,MAAM,CAACG,OAAO;MAC3BJ,KAAK,CAACV,MAAM,GAAGH,UAAU,CAACI,IAAI;IAChC,CAAC,CAAC,CACDM,OAAO,CAACC,WAAW,CAACO,QAAQ,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACV,MAAM,GAAGH,UAAU,CAACmB,KAAK;IACjC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,eAAed,YAAY,CAACe,OAAO;AACnC,OAAO,MAAM;EAAEC;AAAc,CAAC,GAAGhB,YAAY,CAACiB,OAAO;AAErD,OAAO,MAAMX,WAAW,GAAGZ,gBAAgB,CAAC,aAAa,EAAE,YAAY;EACrE,MAAMG,IAAI,GAAG,MAAMqB,KAAK,CAAC,mCAAmC,CAAC;EAC7D,MAAMC,MAAM,GAAG,MAAMtB,IAAI,CAACuB,IAAI,CAAC,CAAC;EAChC,OAAOD,MAAM;AACf,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}